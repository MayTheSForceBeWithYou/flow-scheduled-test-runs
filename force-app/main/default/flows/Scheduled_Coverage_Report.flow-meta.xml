<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Query_ApexCodeCoverageAggregate</name>
        <label>Query ApexCodeCoverageAggregate</label>
        <locationX>182</locationX>
        <locationY>2100</locationY>
        <actionName>ToolingAPI.Query Tooling API</actionName>
        <actionType>externalService</actionType>
        <connector>
            <targetReference>Assign_Response</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>q</name>
            <value>
                <elementReference>ApexCodeCoverageAggregateQueryString</elementReference>
            </value>
        </inputParameters>
        <nameSegment>ToolingAPI.Query Tooling API</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_Coverage_Email</name>
        <label>Send Coverage Email</label>
        <locationX>50</locationX>
        <locationY>3372</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddressesArray</name>
            <value>
                <elementReference>RecipientCollection</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>EmailSubject</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>CoverageTemplate</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>useLineBreaks</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>59.0</apiVersion>
    <assignments>
        <description>Add the ApexClass ID to the query string</description>
        <name>Add_ApexClass_ID</name>
        <label>Add ApexClass ID</label>
        <locationX>402</locationX>
        <locationY>1476</locationY>
        <assignmentItems>
            <assignToReference>ApexCodeCoverageAggregateQueryString</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_NonTest_Classes.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_trailing_quote</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Add a closing parenthesis to finish off the query string</description>
        <name>Add_closing_parenthesis</name>
        <label>Add closing parenthesis</label>
        <locationX>182</locationX>
        <locationY>1884</locationY>
        <assignmentItems>
            <assignToReference>ApexCodeCoverageAggregateQueryString</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>)</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Wait_for_No_Good_Reason</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Add a leading comma in the comma-separated ApexClass IDs for query string</description>
        <name>Add_leading_comma_to_query_string</name>
        <label>Add leading comma to query string</label>
        <locationX>270</locationX>
        <locationY>1176</locationY>
        <assignmentItems>
            <assignToReference>ApexCodeCoverageAggregateQueryString</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>,</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_leading_quote</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Add a leading single-quote for the ApexClass ID in query string</description>
        <name>Add_leading_quote</name>
        <label>Add leading quote</label>
        <locationX>402</locationX>
        <locationY>1368</locationY>
        <assignmentItems>
            <assignToReference>ApexCodeCoverageAggregateQueryString</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>&apos;</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_ApexClass_ID</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Add_Line_Break</name>
        <label>Add Line Break</label>
        <locationX>138</locationX>
        <locationY>3072</locationY>
        <assignmentItems>
            <assignToReference>CoverageTableText</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>&lt;br&gt;</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_ACCArecords</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Add Code Coverage percentage to Coverage Row</description>
        <name>Add_Percentage</name>
        <label>Add Percentage</label>
        <locationX>138</locationX>
        <locationY>2856</locationY>
        <assignmentItems>
            <assignToReference>CoverageRow</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>PercentageAsText</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_to_Coverage_Table_Text</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Add the non-test class to the collection for classes to retrieve coverage</description>
        <name>Add_to_Classes_for_Coverage</name>
        <label>Add to Classes for Coverage</label>
        <locationX>446</locationX>
        <locationY>576</locationY>
        <assignmentItems>
            <assignToReference>ClassesforCoverage</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_All_Classes</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_All_Classes</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Add constructed Coverage Row to collection of Coverage Rows</description>
        <name>Add_to_Coverage_Table_Text</name>
        <label>Add to Coverage Table Text</label>
        <locationX>138</locationX>
        <locationY>2964</locationY>
        <assignmentItems>
            <assignToReference>CoverageTableText</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>CoverageRow</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_Line_Break</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Add a trailing single-quote for the ApexClass ID in query string</description>
        <name>Add_trailing_quote</name>
        <label>Add trailing quote</label>
        <locationX>402</locationX>
        <locationY>1584</locationY>
        <assignmentItems>
            <assignToReference>ApexCodeCoverageAggregateQueryString</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>&apos;</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Increment_counter</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_ACCArecord</name>
        <label>Assign ACCArecord</label>
        <locationX>138</locationX>
        <locationY>2532</locationY>
        <assignmentItems>
            <assignToReference>ACCArecord</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_ACCArecords</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Initialize_Code_Coverage_Row</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Recipients</name>
        <label>Assign Recipients</label>
        <locationX>50</locationX>
        <locationY>3264</locationY>
        <assignmentItems>
            <assignToReference>RecipientCollection</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>MyEmail</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Send_Coverage_Email</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Response</name>
        <label>Assign Response</label>
        <locationX>182</locationX>
        <locationY>2208</locationY>
        <assignmentItems>
            <assignToReference>ACCAresponse</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Query_ApexCodeCoverageAggregate.2XX</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_Response</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Calculate code coverage percentage for this class</description>
        <name>Calculate_Percentage</name>
        <label>Calculate Percentage</label>
        <locationX>138</locationX>
        <locationY>2748</locationY>
        <assignmentItems>
            <assignToReference>PercentCovered</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CoveragePercentage</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_Percentage</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Increment the index counter for non-test Apex Classes</description>
        <name>Increment_counter</name>
        <label>Increment counter</label>
        <locationX>402</locationX>
        <locationY>1692</locationY>
        <assignmentItems>
            <assignToReference>idxClassIDcounter</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_NonTest_Classes</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Initialize_Code_Coverage_Row</name>
        <label>Initialize Code Coverage Row</label>
        <locationX>138</locationX>
        <locationY>2640</locationY>
        <assignmentItems>
            <assignToReference>CoverageRow</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ACCArecord.ApexClassOrTrigger.Name</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Calculate_Percentage</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Build the ApexCodeCoverageAggregate query string up in the IN clause</description>
        <name>Initialize_query_string</name>
        <label>Initialize query string</label>
        <locationX>182</locationX>
        <locationY>852</locationY>
        <assignmentItems>
            <assignToReference>ApexCodeCoverageAggregateQueryString</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>SELECT Id,ApexClassOrTriggerId,ApexClassOrTrigger.Name,NumLinesCovered,NumLinesUncovered FROM ApexCodeCoverageAggregate WHERE ApexClassOrTriggerId IN (</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_NonTest_Classes</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>Does the ApexClass have &quot;@isTest&quot; in the Body?</description>
        <name>Check_for_isTest</name>
        <label>Check for @isTest</label>
        <locationX>358</locationX>
        <locationY>468</locationY>
        <defaultConnector>
            <targetReference>Add_to_Classes_for_Coverage</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Does Not Have @isTest</defaultConnectorLabel>
        <rules>
            <name>Has_isTest</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_All_Classes.Body</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>@isTest</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Loop_All_Classes</targetReference>
            </connector>
            <label>Has @isTest</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Response</name>
        <label>Check Response</label>
        <locationX>182</locationX>
        <locationY>2316</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Response_was_success</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Query_ApexCodeCoverageAggregate.responseCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>200.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Loop_ACCArecords</targetReference>
            </connector>
            <label>Response was success</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determine if the counter index is greater than one</description>
        <name>Is_index_greater_than_one</name>
        <label>Is index greater than one</label>
        <locationX>402</locationX>
        <locationY>1068</locationY>
        <defaultConnector>
            <targetReference>Add_leading_quote</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Index not greater than one</defaultConnectorLabel>
        <rules>
            <name>Index_greater_than_one</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>idxClassIDcounter</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Add_leading_comma_to_query_string</targetReference>
            </connector>
            <label>Index greater than one</label>
        </rules>
    </decisions>
    <description>Retrieve ApexCodeCoverageAggregate records from the Tooling API on a schedule and send out a report with the results</description>
    <environments>Default</environments>
    <formulas>
        <name>CoveragePercentage</name>
        <dataType>Number</dataType>
        <expression>IF(
    {!Loop_ACCArecords.NumLinesCovered} + {!Loop_ACCArecords.NumLinesUncovered} = 0,
    0,
    {!Loop_ACCArecords.NumLinesCovered} / ({!Loop_ACCArecords.NumLinesCovered} + {!Loop_ACCArecords.NumLinesUncovered})
)</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>PercentageAsText</name>
        <dataType>String</dataType>
        <expression>&apos;     &apos; + TEXT({!PercentCovered} * 100) + &apos;%&apos;</expression>
    </formulas>
    <interviewLabel>Scheduled Coverage Report {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Scheduled Coverage Report</label>
    <loops>
        <name>Loop_ACCArecords</name>
        <label>Loop ACCArecords</label>
        <locationX>50</locationX>
        <locationY>2424</locationY>
        <collectionReference>ACCAresponse.records</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assign_ACCArecord</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Assign_Recipients</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>Loop through all local classes to filter out test classes</description>
        <name>Loop_All_Classes</name>
        <label>Loop All Classes</label>
        <locationX>182</locationX>
        <locationY>360</locationY>
        <collectionReference>Get_Local_Classes</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Check_for_isTest</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Initialize_query_string</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>Loop through all non-test classes, collecting their IDs in a string collection</description>
        <name>Loop_NonTest_Classes</name>
        <label>Loop NonTest Classes</label>
        <locationX>182</locationX>
        <locationY>960</locationY>
        <collectionReference>ClassesforCoverage</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Is_index_greater_than_one</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Add_closing_parenthesis</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Retrieve all local Apex Classes</description>
        <name>Get_Local_Classes</name>
        <label>Get Local Classes</label>
        <locationX>182</locationX>
        <locationY>252</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_All_Classes</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>NamespacePrefix</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>ApexClass</object>
        <sortField>Name</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Local_Classes</targetReference>
        </connector>
        <schedule>
            <frequency>Daily</frequency>
            <startDate>2023-09-12</startDate>
            <startTime>19:14:00.000Z</startTime>
        </schedule>
        <triggerType>Scheduled</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <description>Text Template for an Apex Code Coverage email</description>
        <name>CoverageTemplate</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;Here&apos;s your Code Coverage report:&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!CoverageTableText}&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>ACCArecord</name>
        <apexClass>ExternalService__ToolingAPI_Queryx20Toolingx20API_OUT_2XX_records</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>ACCAresponse</name>
        <apexClass>ExternalService__ToolingAPI_Queryx20Toolingx20API_OUT_2XX</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>The ApexOrClassTrigger object with dot-notated fields of a ApexCodeCoverageAggregate response query</description>
        <name>ApexClassOrTrigger</name>
        <apexClass>ExternalService__ToolingAPI_Queryx20Toolingx20API_OUT_2XX_records_ApexClassOrTrigger</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Query string to retrieve ApexCodeCoverageAggregate records from the Tooling API</description>
        <name>ApexCodeCoverageAggregateQueryString</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue></stringValue>
        </value>
    </variables>
    <variables>
        <description>Collection of Apex Classes for which to retrieve coverage results</description>
        <name>ClassesforCoverage</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>ApexClass</objectType>
    </variables>
    <variables>
        <description>Single text row of coverage report</description>
        <name>CoverageRow</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>CoverageRows</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>CoverageTableText</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>EmailSubject</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue>Code Coverage Report</stringValue>
        </value>
    </variables>
    <variables>
        <description>Index to count through string collection of Class IDs</description>
        <name>idxClassIDcounter</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>1.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>MyEmail</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue>MayTheSForceBeWithYou+boon@gmail.com</stringValue>
        </value>
    </variables>
    <variables>
        <description>Percentage coverage for this ApexCodeCoverageAggregate record</description>
        <name>PercentCovered</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>RecipientCollection</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>RecipientID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue>0053h000007OnBP</stringValue>
        </value>
    </variables>
    <waits>
        <description>... and we wait</description>
        <name>Wait_for_No_Good_Reason</name>
        <elementSubtype>WaitDuration</elementSubtype>
        <label>Wait for No Good Reason</label>
        <locationX>182</locationX>
        <locationY>1992</locationY>
        <defaultConnectorLabel>Default Path</defaultConnectorLabel>
        <waitEvents>
            <conditionLogic>and</conditionLogic>
            <connector>
                <targetReference>Query_ApexCodeCoverageAggregate</targetReference>
            </connector>
            <label>el_0</label>
            <offset>1</offset>
            <offsetUnit>Minutes</offsetUnit>
        </waitEvents>
    </waits>
</Flow>
